# Generated by Django 3.1.1 on 2021-01-12 01:08

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Баланс')),
                ('username', models.EmailField(max_length=254, unique=True, verbose_name='Имя пользователя')),
                ('password', models.CharField(max_length=256, validators=[django.core.validators.MinLengthValidator(8)], verbose_name='Пароль')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Название валюты')),
                ('code', models.SmallIntegerField(verbose_name='Код валюты')),
                ('short_name', models.CharField(max_length=3, unique=True, verbose_name='Краткое название валюты')),
                ('symbol', models.CharField(max_length=1, verbose_name='Символ валюты')),
                ('multiplicity', models.SmallIntegerField()),
                ('currency_type', models.CharField(choices=[('basic', 'BASIC'), ('secondary', 'SECONDARY')], default='SECONDARY', max_length=9, verbose_name='Тип валюты')),
                ('course', models.DecimalField(decimal_places=4, max_digits=8, verbose_name='Курс валюты')),
            ],
        ),
        migrations.CreateModel(
            name='Transfers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время перевода')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0), django.core.validators.DecimalValidator(8, 2)], verbose_name='Сумма перевода')),
                ('transfer_type', models.CharField(choices=[('income', 'INCOME'), ('outcome', 'OUTCOME')], default='outcome', max_length=7, verbose_name='Тип перевода')),
                ('counterparty_type', models.CharField(choices=[('income', 'INCOME'), ('outcome', 'OUTCOME')], default='receiver', max_length=7, verbose_name='Статус контрагента')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='original_account', to=settings.AUTH_USER_MODEL, verbose_name='Счет')),
                ('counterparty_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='counterparty_account', to=settings.AUTH_USER_MODEL, to_field='username', verbose_name='Счет контрагента')),
                ('currency', models.ForeignKey(default='USD', on_delete=django.db.models.deletion.PROTECT, to='api.currency', to_field='short_name', verbose_name='Валюта')),
            ],
        ),
        migrations.AddField(
            model_name='advuser',
            name='currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.currency', to_field='short_name', verbose_name='Валюта'),
        ),
        migrations.AddField(
            model_name='advuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='advuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
